<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multicampus.topicsation.repository.ISignUpDAO">
<!--    가입된 회원인지 email로 확인-->
    <select id="checkEmailDAO" parameterType="String" resultType="int">
        select ifnull(count(*), 0) FROM USER where BINARY email = #{email}
    </select>
<!--    가입된 회원 중 이메일인증을 받았는지 확인-->
    <select id="checkEmailAuthDAO" parameterType="String" resultType="int">
        select count(*) FROM USER where BINARY email = #{email} and email_auth = 1
    </select>
<!--    재회원가입을 위한 기존 튜티 정보 삭제-->
    <delete id="deleteNotAuthTuteeDAO" parameterType="String">
        delete FROM USER where BINARY email = #{email}
    </delete>
<!--    재회원가입을 위한 기존 튜터 정보 삭제-->
    <delete id="deleteNotAuthTutorDAO" parameterType="String">
        delete FROM USER where BINARY email = #{email}
    </delete>
<!--    신규 튜티 회원가입-->
    <insert id="addTuteeDAO" parameterType="com.multicampus.topicsation.dto.SignUpDTO">
        insert into USER(name, email, password, interest1, interest2, role) values (#{name}, #{email}, #{password}, #{firstInterest}, #{secondInterest}, #{role})
    </insert>
<!--    신규 튜터 회원가입-->
    <insert id="addTutorDAO1" parameterType="com.multicampus.topicsation.dto.SignUpDTO">
        insert into USER(name, email, password, interest1, interest2, role) values (#{name}, #{email}, #{password}, #{firstInterest}, #{secondInterest}, #{role})
    </insert>
    <insert id="addTutorDAO2" parameterType="com.multicampus.topicsation.dto.SignUpDTO">
        insert into TUTOR_INFO (tutor_id, gender, nationality, certificate) values (last_insert_id(), #{gender}, #{nationality}, #{certificate})
    </insert>
<!--    튜터 인증파일 파일명을 user_id로 변경하기 위해-->
    <select id="getUserId" parameterType="String" resultType="String">
        select user_id FROM USER where BINARY email = #{email}
    </select>
    <!-- 인증 코드 저장 메서드 -->
    <update id="saveEmailCode">
        UPDATE USER SET EMAIL_AUTH = #{emailCode} WHERE BINARY EMAIL = #{email}
    </update>
    <!-- 인증 코드 가져오는 메서드 -->
    <select id="getEmailCode" resultType="_int">
        SELECT EMAIL_AUTH FROM USER WHERE EMAIL = #{email}
    </select>
    <!-- 인증 코드 저장 메서드 -->


</mapper>